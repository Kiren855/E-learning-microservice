server:
  port: 8081
  servlet:
    context-path: /course

spring:
  application:
    name: course-service
  data:
    mongodb:
      uri: ${COURSE_DB_URL}
  cloud:
    azure:
      storage:
        account-name: ${AZURE_STORAGE_NAME}
        account-key: ${AZURE_STORAGE_KEY}
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${ISSUER_URL}
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
    properties:
      security:
        protocol: SASL_SSL
      sasl:
        mechanism: PLAIN
        jaas:
          config: ${KAFKA_CONNECT}

    consumer:
      group-id: "course-consumer-group"
      enable-auto-commit: true
      auto-commit-interval: 1000
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "com.sunny.microservices.basedomain.event"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

idp:
  url: ${KEYCLOAK_URL}
  client-id: ${KEYCLOAK_CLIENT_ID}
  client-secret: ${KEYCLOAK_CLIENT_SECRET}

user-service:
  url: ${USER_SERVICE_URL}

logging:
  level:
    org.apache.kafka: WARN
    org.apache.kafka.clients: WARN
    org.apache.kafka.common: WARN
    org.apache.kafka.clients.consumer: WARN